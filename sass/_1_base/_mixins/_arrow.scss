//
//   @triangle
// --------------------------------------------------------
//  _1_base/_mixins/_arrow.scss
// --------------------------------------------------------
//
//  A mixin to create CSS arrows.
//
//  The arguments are:
//
//    size
//    color
//    direction: up / right / down / left / up-right / up-left / down-right / down-left
//
// --------------------------------------------------------

@mixin triangle($size, $color, $direction) {
    height: 0;
    width: 0;

    @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {
        border-color: transparent;
        border-style: solid;
        border-width: $size;

        @if $direction == up {
            border-bottom-color: $color;

        } @else if $direction == right {
            border-left-color: $color;

        } @else if $direction == down {
            border-top-color: $color;

        } @else if $direction == left {
            border-right-color: $color;
        }
    } @else if ($direction == up-right) or ($direction == up-left) {
        border-top: $size solid $color;

        @if $direction == up-right {
            border-left: $size solid transparent;

        } @else if $direction == up-left {
            border-right: $size solid transparent;
        }
    } @else if ($direction == down-right) or ($direction == down-left) {
        border-bottom: $size solid $color;

        @if $direction == down-right {
            border-left: $size solid transparent;

        } @else if $direction == down-left {
            border-right: $size solid transparent;
        }
    }
}




//
//   @arrow
// --------------------------------------------------------
//
//  A mixin to create an arrow relative to a parent.  Note
//  that your parent element will need to have relative,
//  absolute, or fixed position declared.
//
//  The arguments are:
//
//    Position: up / right / down / left
//    Background Color
//    Size
//    Border Color
//    Border Size
//
// --------------------------------------------------------

@mixin arrow($position, $bg-color, $size, $border-color: false, $border-size: false) {

    @if $border-size != false  {


        &:before,
        &:after {
            @include triangle($size, $bg-color, $position);
            content: ' ';
            pointer-events: none;
            position: absolute;

            // If position is top
            @if $position == 'up' {
                bottom: 100%;
                left: 50%;
                margin-left: -$size;
            }

            // if position is right
            @if $position == 'right' {
                left: 100%;
                margin-top: -$size;
                top: 50%;
            }

            // If position is bottom
            @if $position == 'down' {
                left: 50%;
                margin-left: -$size;
                top: 100%;
            }

            // If position is left
            @if $position == 'left' {
                margin-top: -$size;
                right: 100%;
                top: 50%;
            }

        }

        $border-size: $size + ($border-size*1.5);

        &:before {
            @include triangle($border-size, $border-color, $position);

            // If position is top
            @if $position == 'up' {
                margin-left: -$border-size;
            }

            // if position is right
            @if $position == 'right' {
                margin-top: -$border-size;
            }

            // If position is bottom
            @if $position == 'down' {
                margin-left: -$border-size;
            }

            // If position is left
            @if $position == 'left' {
                margin-top: -$border-size;
            }
        }


    } @else {


        &:after {
            @include triangle($size, $bg-color, $position);
            content: ' ';
            pointer-events: none;
            position: absolute;

            // If position is top
            @if $position == 'up' {
                bottom: 100%;
                left: 50%;
                margin-left: -$size;
            }

            // if position is right
            @if $position == 'right' {
                left: 100%;
                margin-top: -$size;
                top: 50%;
            }

            // If position is bottom
            @if $position == 'down' {
                left: 50%;
                margin-left: -$size;
                top: 100%;
            }

            // If position is left
            @if $position == 'left' {
                margin-top: -$size;
                right: 100%;
                top: 50%;
            }
        }


    }

}
